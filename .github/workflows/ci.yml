name: FragDenStaat CI

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install

      - uses: pre-commit/action@v3.0.1
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements-dev.txt
      - name: Install system-level dependencies
        run: sudo apt-get update && sudo apt-get install libxml2-dev libxslt1-dev python3-dev libgdal-dev gdal-bin libmagic-dev libmagickwand-dev gettext libpoppler-cpp-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip uv
          uv pip install -r requirements-dev.txt
          playwright install --with-deps chromium
          uv pip install -e .
          bash devsetup.sh frontend
        env:
          UV_SYSTEM_PYTHON: true
      - name: Build frontend
        run: yarn run build
      - name: Compile translations
        run: python manage.py compilemessages
      - name: Run tests
        run: make testci
        env:
          DATABASE_URL: postgis://postgres:postgres@localhost/fragdenstaat_de
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fragdenstaat_de
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      elasticsearch:
        image: elasticsearch:8.14.3
        options: -e "discovery.type=single-node" -e "xpack.security.enabled=false" --expose 9200 --health-cmd "curl localhost:9200/_cluster/health" --health-interval 10s --health-timeout 5s --health-retries 10
        ports:
          - 9200:9200
