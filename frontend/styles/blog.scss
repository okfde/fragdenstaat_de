/* 
  article detail page
*/

// about 70-90 characters per line
$blog-normal-width: 50rem;
$blog-standout-width: 72rem;

@mixin blog-width($max-width: 50rem) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding: 0 $grid-gutter-width * 0.5;
}

.blog-header {
  &-meta {
    background-color: rgba(
      var(--article-color, var(--#{$prefix}blue-500-rgb)),
      0.05
    );
  }

  &-image {
    @include blog-width();
    img {
      width: auto;
      max-width: 100%;
      max-height: 32rem;
      margin: auto;
    }
  }

  > .backdrop::before {
    background: rgba(var(--article-color, var(--#{$prefix}blue-500-rgb)), 0.05);
  }
}

.blog-author-images {
  display: flex;

  img {
    width: 3rem;
    height: 3rem;
  }

  > a:not(:first-of-type) {
    margin-left: calc(-0.5rem);
  }
}

.blog-content {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;

  > h2,
  > h3,
  > h4,
  > ul,
  > ol,
  > p,
  > details,
  > hr {
    font-family: $font-family-serif;
    color: var(--#{$prefix}body-color);
    @include blog-width();

    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
  }

  > p,
  > ul,
  > ol,
  > details {
    font-size: 1.225rem;
    line-height: 1.5;
  }

  > h3:not(:first-child) {
    margin-top: 4rem !important;
  }

  > h3 {
    color: var(--#{$prefix}emphasis-color);
    font-family: $font-family-sans-serif;
  }

  > blockquote,
  > .blockquote-figure {
    @include blog-width();
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    padding: 1rem;
    background-color: var(--#{$prefix}tertiary-bg);

    > p,
    > blockquote > p {
      border-left: 4px solid var(--#{$prefix}dark-bg-subtle);
      padding: 0.5rem 0 0.5rem 1rem;
      margin: 0;
    }

    figcaption.blockquote-footer {
      margin: 0;
      padding-left: calc(1rem + 4px); // to match border-left of blockquote
    }
  }

  > details,
  > div.infotextbox,
  .inline_detailbox--content {
    color: var(--#{$prefix}primary-text-emphasis);
    background-color: var(--#{$prefix}primary-bg-subtle);

    @include blog-width();
    margin-top: 1rem;
    padding: 1rem 1rem 0;

    > summary {
      padding-bottom: 1rem;
    }
  }

  .inline_detailbox--content {
    display: flex
  }
}

.blog-article .text-container {
  @include blog-width();
}

.blog-article footer > section {
  border-top: 1px var(--#{$prefix}border-color) solid;
  margin-top: $spacer * 1.5;
  padding-top: $spacer * 1.5;
}

aside.article-banner {
  margin-top: 3rem;
}

/*
  blog preview items
*/

.blog-visual {
  opacity: 1;
  overflow: hidden;

  img {
    width: 100%;
    transition: transform 0.3s ease-out;
  }
}

.blog-top-feature-meta.border-blue {
  border-top-width: 0;

  @include media-breakpoint-up(lg) {
    border-top-width: unset;
    border-right-width: 0;
  }
}

// add hover effect when hovering over image or the image's next element (description)
.blog-article-item:hover figure img {
  transform: scale(1.03);
}

.article-header-video {
  position: relative;
  min-height: calc(100vh - $header-height-mobile);

  @include media-breakpoint-up(lg) {
    min-height: 36rem;
  }

  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;

  video {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1;
  }

  .blog-header-meta {
    background-color: unset;
    color: $white;

    a {
      color: $white;
      text-decoration: underline;
    }
  }
}

.inline_detailbox > .inline_detailbox--title::after {
  content: " âŠ•";
}


.inline_detailbox[expanded] > .inline_detailbox--title::after {
  content: " âŠ–";
}

.inline_detailbox {
  padding-bottom: 1em;
}
