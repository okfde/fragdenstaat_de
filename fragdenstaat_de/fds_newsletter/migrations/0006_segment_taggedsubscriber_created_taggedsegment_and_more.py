# Generated by Django 4.2.16 on 2025-04-16 11:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('fds_newsletter', '0005_unsubscribefeedback_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'verbose_name': 'segment',
                'verbose_name_plural': 'segments',
            },
        ),
        migrations.AddField(
            model_name='taggedsubscriber',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='TaggedSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fds_newsletter.segment')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='fds_newsletter.subscribertag')),
            ],
            options={
                'verbose_name': 'Tagged Segment',
                'verbose_name_plural': 'Tagged Segments',
            },
        ),
        migrations.AddField(
            model_name='segment',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='fds_newsletter.TaggedSegment', to='fds_newsletter.SubscriberTag', verbose_name='contains subscribers with all of these'),
        ),
    ]
